// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.6.1
// source: model.proto

package model

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ArcDataFormat int32

const (
	ArcDataFormat_JSON ArcDataFormat = 0
	ArcDataFormat_ARC  ArcDataFormat = 1
	ArcDataFormat_PUML ArcDataFormat = 2
)

// Enum value maps for ArcDataFormat.
var (
	ArcDataFormat_name = map[int32]string{
		0: "JSON",
		1: "ARC",
		2: "PUML",
	}
	ArcDataFormat_value = map[string]int32{
		"JSON": 0,
		"ARC":  1,
		"PUML": 2,
	}
)

func (x ArcDataFormat) Enum() *ArcDataFormat {
	p := new(ArcDataFormat)
	*p = x
	return p
}

func (x ArcDataFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArcDataFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_model_proto_enumTypes[0].Descriptor()
}

func (ArcDataFormat) Type() protoreflect.EnumType {
	return &file_model_proto_enumTypes[0]
}

func (x ArcDataFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArcDataFormat.Descriptor instead.
func (ArcDataFormat) EnumDescriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{0}
}

type PresentationPerspective int32

const (
	PresentationPerspective_CONTEXT   PresentationPerspective = 0
	PresentationPerspective_CONTAINER PresentationPerspective = 1
	PresentationPerspective_COMPONENT PresentationPerspective = 2
	PresentationPerspective_CODE      PresentationPerspective = 4
	PresentationPerspective_LANDSCAPE PresentationPerspective = 5
)

// Enum value maps for PresentationPerspective.
var (
	PresentationPerspective_name = map[int32]string{
		0: "CONTEXT",
		1: "CONTAINER",
		2: "COMPONENT",
		4: "CODE",
		5: "LANDSCAPE",
	}
	PresentationPerspective_value = map[string]int32{
		"CONTEXT":   0,
		"CONTAINER": 1,
		"COMPONENT": 2,
		"CODE":      4,
		"LANDSCAPE": 5,
	}
)

func (x PresentationPerspective) Enum() *PresentationPerspective {
	p := new(PresentationPerspective)
	*p = x
	return p
}

func (x PresentationPerspective) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PresentationPerspective) Descriptor() protoreflect.EnumDescriptor {
	return file_model_proto_enumTypes[1].Descriptor()
}

func (PresentationPerspective) Type() protoreflect.EnumType {
	return &file_model_proto_enumTypes[1]
}

func (x PresentationPerspective) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PresentationPerspective.Descriptor instead.
func (PresentationPerspective) EnumDescriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{1}
}

type ArcVisualFormat int32

const (
	ArcVisualFormat_PNG ArcVisualFormat = 0
	ArcVisualFormat_SVG ArcVisualFormat = 1
	ArcVisualFormat_PDF ArcVisualFormat = 3
)

// Enum value maps for ArcVisualFormat.
var (
	ArcVisualFormat_name = map[int32]string{
		0: "PNG",
		1: "SVG",
		3: "PDF",
	}
	ArcVisualFormat_value = map[string]int32{
		"PNG": 0,
		"SVG": 1,
		"PDF": 3,
	}
)

func (x ArcVisualFormat) Enum() *ArcVisualFormat {
	p := new(ArcVisualFormat)
	*p = x
	return p
}

func (x ArcVisualFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArcVisualFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_model_proto_enumTypes[2].Descriptor()
}

func (ArcVisualFormat) Type() protoreflect.EnumType {
	return &file_model_proto_enumTypes[2]
}

func (x ArcVisualFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArcVisualFormat.Descriptor instead.
func (ArcVisualFormat) EnumDescriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{2}
}

type RenderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//Type of the data
	DataFormat ArcDataFormat `protobuf:"varint,1,opt,name=dataFormat,proto3,enum=model.ArcDataFormat" json:"dataFormat,omitempty"`
	//visualFormat of the render request
	VisualFormat ArcVisualFormat `protobuf:"varint,2,opt,name=visualFormat,proto3,enum=model.ArcVisualFormat" json:"visualFormat,omitempty"`
	//data is the raw serialized byte array of the arc data type
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	//perspective specify the level of architecture view to render
	Perspective PresentationPerspective `protobuf:"varint,4,opt,name=perspective,proto3,enum=model.PresentationPerspective" json:"perspective,omitempty"`
	//target specify the specific element to render
	Target []string `protobuf:"bytes,5,rep,name=target,proto3" json:"target,omitempty"`
}

func (x *RenderRequest) Reset() {
	*x = RenderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderRequest) ProtoMessage() {}

func (x *RenderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderRequest.ProtoReflect.Descriptor instead.
func (*RenderRequest) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{0}
}

func (x *RenderRequest) GetDataFormat() ArcDataFormat {
	if x != nil {
		return x.DataFormat
	}
	return ArcDataFormat_JSON
}

func (x *RenderRequest) GetVisualFormat() ArcVisualFormat {
	if x != nil {
		return x.VisualFormat
	}
	return ArcVisualFormat_PNG
}

func (x *RenderRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RenderRequest) GetPerspective() PresentationPerspective {
	if x != nil {
		return x.Perspective
	}
	return PresentationPerspective_CONTEXT
}

func (x *RenderRequest) GetTarget() []string {
	if x != nil {
		return x.Target
	}
	return nil
}

type ArcPresentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//Format of the presentation
	Format ArcVisualFormat `protobuf:"varint,1,opt,name=format,proto3,enum=model.ArcVisualFormat" json:"format,omitempty"`
	//Serialized raw data to be shared
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ArcPresentation) Reset() {
	*x = ArcPresentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArcPresentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArcPresentation) ProtoMessage() {}

func (x *ArcPresentation) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArcPresentation.ProtoReflect.Descriptor instead.
func (*ArcPresentation) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{1}
}

func (x *ArcPresentation) GetFormat() ArcVisualFormat {
	if x != nil {
		return x.Format
	}
	return ArcVisualFormat_PNG
}

func (x *ArcPresentation) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_model_proto protoreflect.FileDescriptor

var file_model_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x22, 0xef, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x41, 0x72, 0x63, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x3a, 0x0a, 0x0c,
	0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x63, 0x56, 0x69,
	0x73, 0x75, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0c, 0x76, 0x69, 0x73, 0x75,
	0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0b,
	0x70, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x55, 0x0a, 0x0f, 0x41, 0x72, 0x63, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x41, 0x72, 0x63, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x2c, 0x0a,
	0x0d, 0x41, 0x72, 0x63, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x08,
	0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x52, 0x43, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x55, 0x4d, 0x4c, 0x10, 0x02, 0x2a, 0x5d, 0x0a, 0x17, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x58,
	0x54, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x10,
	0x02, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x4c,
	0x41, 0x4e, 0x44, 0x53, 0x43, 0x41, 0x50, 0x45, 0x10, 0x05, 0x2a, 0x2c, 0x0a, 0x0f, 0x41, 0x72,
	0x63, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x07, 0x0a,
	0x03, 0x50, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x56, 0x47, 0x10, 0x01, 0x12,
	0x07, 0x0a, 0x03, 0x50, 0x44, 0x46, 0x10, 0x03, 0x32, 0x42, 0x0a, 0x06, 0x41, 0x72, 0x63, 0x56,
	0x69, 0x7a, 0x12, 0x38, 0x0a, 0x06, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x63, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_proto_rawDescOnce sync.Once
	file_model_proto_rawDescData = file_model_proto_rawDesc
)

func file_model_proto_rawDescGZIP() []byte {
	file_model_proto_rawDescOnce.Do(func() {
		file_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_proto_rawDescData)
	})
	return file_model_proto_rawDescData
}

var file_model_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_model_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_model_proto_goTypes = []interface{}{
	(ArcDataFormat)(0),           // 0: model.ArcDataFormat
	(PresentationPerspective)(0), // 1: model.PresentationPerspective
	(ArcVisualFormat)(0),         // 2: model.ArcVisualFormat
	(*RenderRequest)(nil),        // 3: model.RenderRequest
	(*ArcPresentation)(nil),      // 4: model.ArcPresentation
}
var file_model_proto_depIdxs = []int32{
	0, // 0: model.RenderRequest.dataFormat:type_name -> model.ArcDataFormat
	2, // 1: model.RenderRequest.visualFormat:type_name -> model.ArcVisualFormat
	1, // 2: model.RenderRequest.perspective:type_name -> model.PresentationPerspective
	2, // 3: model.ArcPresentation.format:type_name -> model.ArcVisualFormat
	3, // 4: model.ArcViz.Render:input_type -> model.RenderRequest
	4, // 5: model.ArcViz.Render:output_type -> model.ArcPresentation
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_model_proto_init() }
func file_model_proto_init() {
	if File_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArcPresentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_model_proto_goTypes,
		DependencyIndexes: file_model_proto_depIdxs,
		EnumInfos:         file_model_proto_enumTypes,
		MessageInfos:      file_model_proto_msgTypes,
	}.Build()
	File_model_proto = out.File
	file_model_proto_rawDesc = nil
	file_model_proto_goTypes = nil
	file_model_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ArcVizClient is the client API for ArcViz service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArcVizClient interface {
	//Render serve the presentation given the raw data and type
	Render(ctx context.Context, in *RenderRequest, opts ...grpc.CallOption) (*ArcPresentation, error)
}

type arcVizClient struct {
	cc grpc.ClientConnInterface
}

func NewArcVizClient(cc grpc.ClientConnInterface) ArcVizClient {
	return &arcVizClient{cc}
}

func (c *arcVizClient) Render(ctx context.Context, in *RenderRequest, opts ...grpc.CallOption) (*ArcPresentation, error) {
	out := new(ArcPresentation)
	err := c.cc.Invoke(ctx, "/model.ArcViz/Render", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArcVizServer is the server API for ArcViz service.
type ArcVizServer interface {
	//Render serve the presentation given the raw data and type
	Render(context.Context, *RenderRequest) (*ArcPresentation, error)
}

// UnimplementedArcVizServer can be embedded to have forward compatible implementations.
type UnimplementedArcVizServer struct {
}

func (*UnimplementedArcVizServer) Render(context.Context, *RenderRequest) (*ArcPresentation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Render not implemented")
}

func RegisterArcVizServer(s *grpc.Server, srv ArcVizServer) {
	s.RegisterService(&_ArcViz_serviceDesc, srv)
}

func _ArcViz_Render_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArcVizServer).Render(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.ArcViz/Render",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArcVizServer).Render(ctx, req.(*RenderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ArcViz_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.ArcViz",
	HandlerType: (*ArcVizServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Render",
			Handler:    _ArcViz_Render_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "model.proto",
}
