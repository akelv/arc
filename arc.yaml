app: "arcs"
desc: "Arc is a simple utility to author, view, inspect and update software architecture design"
users:
  - name: "dev"
    desc: "one who create software service"
  - name: "product"
    desc: "one who design product"
  - name: "ops"
    desc: "one who run software service"

internal-systems:
  - name: "arc"
    desc: |
      Enable deloper to author, inspect and version control software systems design and code. 
      Allow integration with other Ci/Cd systems to build and auto verify software system's
      impelementation versus design.
  
    containers:
    - name: cli
      runtime: cli-binary
      technology: golang
      desc: "local utility to parse and build arc data to and from visualizations"
  
    - name: gui
      runtime: ecma-engines
      technology: javascript-spa 
      desc: "Web base user interface to author and inspect software architecture design"
    
    - name: viz
      runtime: docker-java
      technology: gRPC service, plantuml
      desc: "render visualization of archtecture design given a arc data blob specifications"
  
    - name: api
      runtime: alpine-docker 
      technology: golang-graphql
      desc: "api servers that enable webhooks to other ci/cd toolchain to inspect and update design models"
      components:
       - name: inpsector-api 
         desc: "inspect the stored software design model"
         code-path: "./api"
       - name: update-api
         desc: "create or update software design information"
         code-path: "./api"
         
    - name: db
      runtime: database
      technology: dgraph
      desc: "graph database that store the software design models and dependency paths"

    - name: index
      runtime: docker-golang
      technology: "golang-https://github.com/kazukousen/gouml"
      desc: "inspect and index a source repository to auto generate code level architecture diagrams"

external-systems:
  - git-server:
    desc: "source version control"
  - build-service:
    desc: "integration runner that build, test, release software"
  - deploy-service:
    desc: "deployment infrastructure and service that provision the software runtime to production"
  - dev-ide:
    desc: "software developement editor and integrated environment"

# relations:
#   - {s: users.dev,p: design and develop software,o: arc}
#   - {s: users.product,p: view system design,o: arc.gui}
#   - {s: users.ops,p: inspect containers layout,o: arc.gui}
#   - {s: users.dev,p: author containers design,o: arc.gui}
#   - {s: arc.cli,p: serve to local browser,o: arc.gui}
#   - {s: arc.gui,p: call (https:restful),o: arc.api.inspector}
#   - {s: arc.cli,p: call (https:restful),o: arc.api.update}
#   - {s: dev-ide,p: integrate (pluggin),o: arc.cli}
#   - {s: build-service,p: update system model,o: arc.api.update}
#   - {s: deploy-service,p: verify deployment design,o: arc}
#   - {s: arc.cli,p: download new project template from,o: git-server}
#   - {s: arc.index,p:  pull source from,o: git-server}